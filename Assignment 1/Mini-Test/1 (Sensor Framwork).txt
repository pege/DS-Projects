//1A============================================================================================
//List Available sensors on a device

package ch.ethz.inf.vs.gruntzp.mini_test;

import android.hardware.Sensor;
import android.hardware.SensorManager;
import android.os.Bundle;
import android.support.v7.app.AppCompatActivity;
import android.widget.TextView;

import java.util.List;

public class MainActivity extends AppCompatActivity {

   @Override
    public void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);

        SensorManager sensorM= (SensorManager) getSystemService(SENSOR_SERVICE);
        List<Sensor> sensorList = sensorM.getSensorList(Sensor.TYPE_ALL);

        String sensorsText = "";
        if (sensorList.size()>0) {
            TextView textView = (TextView) findViewById(R.id.textView);
            Sensor tmp;
            for (int i=0;i<sensorList.size();i++){
                tmp = sensorList.get(i);
                sensorsText = sensorsText + Integer.toString(i+1)+ ". "+tmp.getName() + "\n";
            }
            textView.setText(sensorsText);
        }

    }
}


//============================================================================================
//Retrieve the value range of a specific sensor

public float valueRange(Sensor sensor){
    return sensor.getMaximumRange();
}

//============================================================================================
//Register


private Sensor sensor;
protected void onResume() {
         super.onResume();
         mSensorManager.registerListener(this, sensor, SensorManager.SENSOR_DELAY_FASTEST);
     }

//1B============================================================================================

The problem is, that in the time in which the log method is writing the log, another sensor change can occur and therefore another log method will be called. They can overwrite each other and generate a huge catastrophe.

Another point is that the values wont be copied. So during the log method, the values could be overwritten.

//2============================================================================================